        -:    0:Source:rainhas.cpp
        -:    1:// Copyright 2024 Daniel do Carmo Figueiredo
        -:    2:
        -:    3:#include "rainhas.hpp"
        -:    4:#include <cctype>
        -:    5:#include <string>
        -:    6:#include <fstream>
        -:    7:#include <iostream>
        -:    8:#include <vector>
        -:    9:#include <sstream>
        -:   10:
       18:   11:int valida_arquivo_entrada(const std::string &filename)
        -:   12:{
       18:   13:  std::ifstream file(filename);
       18:   14:  if (!file)
        1:   15:    return -1;
        -:   16:
        -:   17:  char caractere;
       17:   18:  int numColunas = 0;
       17:   19:  int numLinhas = 0;
     1075:   20:  while (file.get(caractere))
        -:   21:  {
     1062:   22:    if (isalpha(caractere))
        1:   23:      return -1;
        -:   24:
     1061:   25:    if (isdigit(caractere) && !(caractere == '0' || caractere == '1'))
        1:   26:      return -1;
        -:   27:
     1060:   28:    if (caractere == '\n')
        -:   29:    {
      105:   30:      if (numColunas != 8)
        2:   31:        return -1;
        -:   32:
      103:   33:      numColunas = 0;
      103:   34:      numLinhas++;
        -:   35:    }
        -:   36:    else
        -:   37:    {
      955:   38:      ++numColunas;
        -:   39:    }
        -:   40:  }
        -:   41:
       13:   42:  if (numLinhas != 7)
        1:   43:    return -1;
        -:   44:
       12:   45:  file.close();
        -:   46:
       12:   47:  return 0;
       18:   48:}
        -:   49:
       18:   50:int game(const std::string &filename)
        -:   51:{
       18:   52:  if (valida_arquivo_entrada(filename) == -1)
        6:   53:    return -1;
        -:   54:
       12:   55:  std::ifstream file(filename);
       12:   56:  std::string linha;
        -:   57:  int tabuleiro[8][8];
       12:   58:  int j = 0;
      108:   59:  while (getline(file, linha))
        -:   60:  {
      864:   61:    for (int i = 0; i < 8; i++)
        -:   62:    {
      768:   63:      tabuleiro[j][i] = linha[i] - '0';
        -:   64:    }
       96:   65:    j++;
        -:   66:  }
       12:   67:  file.close();
        -:   68:
       12:   69:  int nao_solucao = 1;
       12:   70:  int numRainhasColuna = 0; // verifica rainha na mesma coluna
      108:   71:  for (int i = 0; i < 8; i++)
        -:   72:  {
      864:   73:    for (int j = i; j <= i + 7 * 8;)
        -:   74:    {
      768:   75:      if (tabuleiro[i][j] == 1)
       59:   76:        numRainhasColuna++;
        -:   77:
      768:   78:      if (numRainhasColuna > 1)
       11:   79:        nao_solucao = 0;
        -:   80:
      768:   81:      j += 8;
        -:   82:    }
       96:   83:    numRainhasColuna = 0;
        -:   84:  }
        -:   85:
        -:   86:  // rainhas na mesma diagonal
      108:   87:  for (int i = 0; i < 8; i++)
        -:   88:  {
      864:   89:    for (int j = 0; j < 8; j++)
        -:   90:    {
      768:   91:      int numRainhasLinha = 0; // Verifica rainhas na mesma linha
     3456:   92:      for (int n = i + 1; n < 8; n++)
        -:   93:      {
     2688:   94:        if (tabuleiro[n][j] == 1)
      337:   95:          numRainhasLinha++;
        -:   96:
     2688:   97:        if (numRainhasLinha > 1)
       57:   98:          nao_solucao = 0;
        -:   99:      }
      768:  100:      numRainhasLinha = 0;
        -:  101:
      768:  102:      if (tabuleiro[i][j] == 1) // (0,1), (1,2), (3,2), ... (6,7)
        -:  103:      {
      453:  104:        for (int n = i + 1, m = j + 1; m < 8; n++, m++)
        -:  105:        {
      357:  106:          if (tabuleiro[n][m] == 1)
        -:  107:          {
       21:  108:            nao_solucao = 0;
        -:  109:          }
        -:  110:        }
      272:  111:        for (int n = i + 1, m = j - 1; m >= 0 && n < 8; n++, m--) // (0,5), (1,4), (2,3), ... (5,0)
        -:  112:        {
      176:  113:          if (tabuleiro[n][m] == 1)
        -:  114:          {
       11:  115:            nao_solucao = 0;
        -:  116:          }
        -:  117:        }
        -:  118:      }
        -:  119:    }
        -:  120:  }
        -:  121:
       12:  122:  return nao_solucao;
       12:  123:}
        -:  124:
       18:  125:int rainhas(const std::string &filename)
        -:  126:{
       18:  127:  int valida_game = game(filename);
        -:  128:
       18:  129:  return valida_game;
        -:  130:}
